# from Suffix_Trie_Construction import __init__

# def test___init___case_1():
#     assert __init__(classMethodsToCall=[{'arguments': ['abc'], 'method': 'contains'}], string='babc') == {'methodCallResults': [{'arguments': ['abc'], 'method': 'contains', 'output': True}], 'trie': {'a': {'b': {'c': {'*': True}}}, 'b': {'a': {'b': {'c': {'*': True}}}, 'c': {'*': True}}, 'c': {'*': True}}}

# def test___init___case_2():
#     assert __init__(classMethodsToCall=[{'arguments': ['t'], 'method': 'contains'}, {'arguments': ['st'], 'method': 'contains'}, {'arguments': ['est'], 'method': 'contains'}, {'arguments': ['test'], 'method': 'contains'}, {'arguments': ['tes'], 'method': 'contains'}], string='test') == {'methodCallResults': [{'arguments': ['t'], 'method': 'contains', 'output': True}, {'arguments': ['st'], 'method': 'contains', 'output': True}, {'arguments': ['est'], 'method': 'contains', 'output': True}, {'arguments': ['test'], 'method': 'contains', 'output': True}, {'arguments': ['tes'], 'method': 'contains', 'output': False}], 'trie': {'e': {'s': {'t': {'*': True}}}, 's': {'t': {'*': True}}, 't': {'*': True, 'e': {'s': {'t': {'*': True}}}}}}

# def test___init___case_3():
#     assert __init__(classMethodsToCall=[{'arguments': ['e'], 'method': 'contains'}, {'arguments': ['le'], 'method': 'contains'}, {'arguments': ['ble'], 'method': 'contains'}, {'arguments': ['ible'], 'method': 'contains'}, {'arguments': ['sible'], 'method': 'contains'}, {'arguments': ['isible'], 'method': 'contains'}, {'arguments': ['visible'], 'method': 'contains'}, {'arguments': ['nvisible'], 'method': 'contains'}, {'arguments': ['invisible'], 'method': 'contains'}, {'arguments': ['nvisibl'], 'method': 'contains'}], string='invisible') == {'methodCallResults': [{'arguments': ['e'], 'method': 'contains', 'output': True}, {'arguments': ['le'], 'method': 'contains', 'output': True}, {'arguments': ['ble'], 'method': 'contains', 'output': True}, {'arguments': ['ible'], 'method': 'contains', 'output': True}, {'arguments': ['sible'], 'method': 'contains', 'output': True}, {'arguments': ['isible'], 'method': 'contains', 'output': True}, {'arguments': ['visible'], 'method': 'contains', 'output': True}, {'arguments': ['nvisible'], 'method': 'contains', 'output': True}, {'arguments': ['invisible'], 'method': 'contains', 'output': True}, {'arguments': ['nvisibl'], 'method': 'contains', 'output': False}], 'trie': {'b': {'l': {'e': {'*': True}}}, 'e': {'*': True}, 'i': {'b': {'l': {'e': {'*': True}}}, 'n': {'v': {'i': {'s': {'i': {'b': {'l': {'e': {'*': True}}}}}}}}, 's': {'i': {'b': {'l': {'e': {'*': True}}}}}}, 'l': {'e': {'*': True}}, 'n': {'v': {'i': {'s': {'i': {'b': {'l': {'e': {'*': True}}}}}}}}, 's': {'i': {'b': {'l': {'e': {'*': True}}}}}, 'v': {'i': {'s': {'i': {'b': {'l': {'e': {'*': True}}}}}}}}}

# def test___init___case_4():
#     assert __init__(classMethodsToCall=[{'arguments': ['9'], 'method': 'contains'}, {'arguments': ['89'], 'method': 'contains'}, {'arguments': ['789'], 'method': 'contains'}, {'arguments': ['6789'], 'method': 'contains'}, {'arguments': ['56789'], 'method': 'contains'}, {'arguments': ['456789'], 'method': 'contains'}, {'arguments': ['3456789'], 'method': 'contains'}, {'arguments': ['23456789'], 'method': 'contains'}, {'arguments': ['123456789'], 'method': 'contains'}, {'arguments': ['45567'], 'method': 'contains'}], string='1234556789') == {'methodCallResults': [{'arguments': ['9'], 'method': 'contains', 'output': True}, {'arguments': ['89'], 'method': 'contains', 'output': True}, {'arguments': ['789'], 'method': 'contains', 'output': True}, {'arguments': ['6789'], 'method': 'contains', 'output': True}, {'arguments': ['56789'], 'method': 'contains', 'output': True}, {'arguments': ['456789'], 'method': 'contains', 'output': False}, {'arguments': ['3456789'], 'method': 'contains', 'output': False}, {'arguments': ['23456789'], 'method': 'contains', 'output': False}, {'arguments': ['123456789'], 'method': 'contains', 'output': False}, {'arguments': ['45567'], 'method': 'contains', 'output': False}], 'trie': {'1': {'2': {'3': {'4': {'5': {'5': {'6': {'7': {'8': {'9': {'*': True}}}}}}}}}}, '2': {'3': {'4': {'5': {'5': {'6': {'7': {'8': {'9': {'*': True}}}}}}}}}, '3': {'4': {'5': {'5': {'6': {'7': {'8': {'9': {'*': True}}}}}}}}, '4': {'5': {'5': {'6': {'7': {'8': {'9': {'*': True}}}}}}}, '5': {'5': {'6': {'7': {'8': {'9': {'*': True}}}}}, '6': {'7': {'8': {'9': {'*': True}}}}}, '6': {'7': {'8': {'9': {'*': True}}}}, '7': {'8': {'9': {'*': True}}}, '8': {'9': {'*': True}}, '9': {'*': True}}}

# def test___init___case_5():
#     assert __init__(classMethodsToCall=[{'arguments': ['t'], 'method': 'contains'}, {'arguments': ['st'], 'method': 'contains'}, {'arguments': ['est'], 'method': 'contains'}, {'arguments': ['test'], 'method': 'contains'}, {'arguments': ['ttest'], 'method': 'contains'}, {'arguments': ['sttest'], 'method': 'contains'}, {'arguments': ['esttest'], 'method': 'contains'}, {'arguments': ['testtest'], 'method': 'contains'}, {'arguments': ['tt'], 'method': 'contains'}], string='testtest') == {'methodCallResults': [{'arguments': ['t'], 'method': 'contains', 'output': True}, {'arguments': ['st'], 'method': 'contains', 'output': True}, {'arguments': ['est'], 'method': 'contains', 'output': True}, {'arguments': ['test'], 'method': 'contains', 'output': True}, {'arguments': ['ttest'], 'method': 'contains', 'output': True}, {'arguments': ['sttest'], 'method': 'contains', 'output': True}, {'arguments': ['esttest'], 'method': 'contains', 'output': True}, {'arguments': ['testtest'], 'method': 'contains', 'output': True}, {'arguments': ['tt'], 'method': 'contains', 'output': False}], 'trie': {'e': {'s': {'t': {'*': True, 't': {'e': {'s': {'t': {'*': True}}}}}}}, 's': {'t': {'*': True, 't': {'e': {'s': {'t': {'*': True}}}}}}, 't': {'*': True, 'e': {'s': {'t': {'*': True, 't': {'e': {'s': {'t': {'*': True}}}}}}}, 't': {'e': {'s': {'t': {'*': True}}}}}}}

# def test___init___case_6():
#     assert __init__(classMethodsToCall=[{'arguments': ['t'], 'method': 'contains'}, {'arguments': ['tt'], 'method': 'contains'}, {'arguments': ['ttt'], 'method': 'contains'}, {'arguments': ['tttt'], 'method': 'contains'}, {'arguments': ['ttttt'], 'method': 'contains'}, {'arguments': ['tttttt'], 'method': 'contains'}, {'arguments': ['ttttttt'], 'method': 'contains'}, {'arguments': ['tttttttt'], 'method': 'contains'}, {'arguments': ['ttttttttt'], 'method': 'contains'}, {'arguments': ['vvv'], 'method': 'contains'}], string='ttttttttt') == {'methodCallResults': [{'arguments': ['t'], 'method': 'contains', 'output': True}, {'arguments': ['tt'], 'method': 'contains', 'output': True}, {'arguments': ['ttt'], 'method': 'contains', 'output': True}, {'arguments': ['tttt'], 'method': 'contains', 'output': True}, {'arguments': ['ttttt'], 'method': 'contains', 'output': True}, {'arguments': ['tttttt'], 'method': 'contains', 'output': True}, {'arguments': ['ttttttt'], 'method': 'contains', 'output': True}, {'arguments': ['tttttttt'], 'method': 'contains', 'output': True}, {'arguments': ['ttttttttt'], 'method': 'contains', 'output': True}, {'arguments': ['vvv'], 'method': 'contains', 'output': False}], 'trie': {'t': {'*': True, 't': {'*': True, 't': {'*': True, 't': {'*': True, 't': {'*': True, 't': {'*': True, 't': {'*': True, 't': {'*': True, 't': {'*': True}}}}}}}}}}}

